{"version":3,"sources":["uni_modules/uni-wifi/utssdk/app-android/index.uts","uni_modules/uni-wifi/utssdk/interface.uts","uni_modules/uni-wifi/utssdk/unierror.uts"],"sourcesContent":["import Context from \"android.content.Context\";\nimport WifiManager from \"android.net.wifi.WifiManager\";\nimport WifiInfo from \"android.net.wifi.WifiInfo\";\nimport Manifest from \"android.Manifest\";\nimport PackageManager from \"android.content.pm.PackageManager\";\nimport ScanResult from \"android.net.wifi.ScanResult\";\nimport BroadcastReceiver from \"android.content.BroadcastReceiver\";\nimport ActivityCompat from \"androidx.core.app.ActivityCompat\";\nimport IntentFilter from \"android.content.IntentFilter\";\nimport Intent from \"android.content.Intent\";\n\nimport WifiConfiguration from 'android.net.wifi.WifiConfiguration';\nimport AuthAlgorithm from 'android.net.wifi.WifiConfiguration.AuthAlgorithm';\nimport KeyMgmt from 'android.net.wifi.WifiConfiguration.KeyMgmt';\nimport TextUtils from 'android.text.TextUtils';\nimport Build from 'android.os.Build';\n\nimport { UniWifiResult, UniWifiInfoWithPartialInfo,GetConnectedWifiOptions, WifiConnectOption, WifiOption, UniWifiInfo,UniWifiCallback ,UniWifiResultCallback,UniWifiResultCallbackWithPartialInfo,UniGetWifiListCallback} from \"../interface.uts\"\nimport { WifiFailImpl, getErrcode,UniErrorSubject } from '../unierror';\n\n\n/**\n\t* 全局数据储存\n\t*/\nclass Global {\n\tstatic mReceiver : CustomBroadcastReceiver | null = null;\n\tstatic WIFI_AUTH_OPEN : string = \"\";\n\tstatic WIFI_AUTH_ROAM : String = \"[ESS]\";\n\t// 扫描wifi结果\n\tstatic scanList : AndroidUniWifiInfo[] = []\n\t// 获取wifi列表监听\n\tstatic onGetWifiListCallback : UniGetWifiListCallback|null = null\n\tstatic supendGetWifiSuccess : UniWifiResultCallback|null = null\n\tstatic supendGetWifiComplete :UniWifiResultCallback|null = null\n\t// wifi链接监听\n\tstatic onWifiConnectCallbackList : UniWifiResultCallback[] = []\n\tstatic onWifiConnectWithPartialInfoCallbackList : UniWifiResultCallbackWithPartialInfo[] = []\n}\n\n\n/**\n\t* 是否是标准的16进制字符\n\t*/\nfunction isHex(key : string) : boolean {\n\tfor (var i = key.length - 1; i >= 0; i--) {\n\t\tlet c = key.charAt(i);\n\t\tif (!(c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a'\n\t\t\t&& c <= 'f')) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n\t* 判断是否是wep格式的key\n\t*/\nfunction isHexWepKey(wepKey : string) : boolean {\n\tlet len = wepKey.length;\n\n\t// WEP-40, WEP-104, and some vendors using 256-bit WEP (WEP-232?)\n\tif (len != 10 && len != 26 && len != 58) {\n\t\treturn false;\n\t}\n\n\treturn isHex(wepKey);\n}\n/**\n * android 平台特有的Wifi信息对象，主要是加了加密信息这个字段\n */\nexport type AndroidUniWifiInfo = {\n\tSSID : string;\n\tBSSID ?: string;\n\tsecure : boolean;\n\tsignalStrength : number;\n\tfrequency : number;\n\tsecurityType : string;\n}\n\nfunction wrapUniWifiInfoFromAndroid(androidInfo : AndroidUniWifiInfo) : UniWifiInfo {\n\tlet ret : UniWifiInfo = {\n\t\tSSID: androidInfo.SSID,\n\t\tBSSID: androidInfo.BSSID,\n\t\tsecure: androidInfo.secure,\n\t\tsignalStrength: androidInfo.signalStrength,\n\t\tfrequency: androidInfo.frequency,\n\t}\n\treturn ret\n}\n/**\n * 从扫描结果中提取统一的wifi数据结构\n */\nfunction wrapUniWifiInfoFromScan(scanResult : ScanResult) : AndroidUniWifiInfo {\n\n\tlet ret : AndroidUniWifiInfo = {\n\t\tSSID: \"\",\n\t\tsecure: false,\n\t\tsignalStrength: 0,\n\t\tfrequency: 0,\n\t\tsecurityType: \"NONE\"\n\t}\n\tif (scanResult != null) {\n\t\t// 如果是通过扫描列表得到的数据，进行封装\n\t\tret.BSSID = scanResult.BSSID;\n\t\tret.SSID = scanResult.SSID;\n\n\t\tret.signalStrength = scanResult.level;\n\t\tret.frequency = scanResult.frequency;\n\n\t\t// 是否安全，微信的标准是是否需要密码。 来源:https://developers.weixin.qq.com/community/develop/doc/00064cf1790458db19cddf9925ac00?highLine=WifiInfo\n\t\tret.secure = false;\n\t\tlet capabilities = scanResult.capabilities.trim();\n\t\tif ((capabilities.equals(Global.WIFI_AUTH_OPEN) || capabilities.equals(Global.WIFI_AUTH_ROAM))) {\n\t\t\tret.secure = false;\n\t\t} else {\n\t\t\tret.secure = true;\n\t\t}\n\n\t\t/*扩展字段*/\n\t\tret.securityType = getSecurityType(scanResult);\n\t}\n\n\treturn ret\n}\n/**\n * 从链接信息中提取统一的wifi数据结构\n */\nfunction wrapUniWifiInfoFromConnectInfo(connectInfo : WifiInfo) : UniWifiInfo {\n\tlet ret : UniWifiInfo = {\n\t\tSSID: \"\",\n\t\tsecure: false,\n\t\tsignalStrength: 0,\n\t\tfrequency: 0,\n\t}\n\n\n\tif (connectInfo.getSSID() != null) {\n\t\tlet s = connectInfo.getSSID();\n\t\t// 微信不带，这里需要去掉引号\n\t\tif (s.length > 2 && s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') {\n\t\t\ts = s.substring(1, s.length - 1);\n\t\t}\n\t\tret.SSID = s;\n\t}\n\n\tret.BSSID = connectInfo.getBSSID();\n\t//Android返回的值是-100~0，而微信API规范是0~100，值越大信号越好，需要+100拉齐\n\tret.signalStrength = connectInfo.getRssi() + 100;\n\tret.frequency = connectInfo.getFrequency();\n\n\n\treturn ret\n}\n\n\n/**\n * 连接wifi时使用，根据用户输入内容包装为系统需要的wifi配置对象\n **/\n@Suppress(\"DEPRECATION\")\nfunction wrapWifiConfiguration(SSID : string, password ?: string, passwordType : string) : WifiConfiguration {\n\n\tlet config = new WifiConfiguration();\n\tconfig.status = WifiConfiguration.Status.ENABLED;\n\tconfig.allowedAuthAlgorithms.clear();\n\tconfig.allowedGroupCiphers.clear();\n\tconfig.allowedKeyManagement.clear();\n\tconfig.allowedPairwiseCiphers.clear();\n\tconfig.allowedProtocols.clear();\n\tconfig.SSID = \"\\\"\".concat(SSID).concat(\"\\\"\");\n\n\n\t// nopass\n\tif (\"NONE\".equals(passwordType) || password == null) {\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);\n\t}\n\t// wep\n\telse if (\"WEP\".equals(passwordType)) {\n\t\tif (password != null && !TextUtils.isEmpty(password)) {\n\t\t\tif (isHexWepKey(password)) {\n\t\t\t\tconfig.wepKeys[0] = password;\n\t\t\t} else {\n\t\t\t\tconfig.wepKeys[0] = \"\\\"\".concat(password).concat(\"\\\"\");\n\t\t\t}\n\t\t}\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.OPEN);\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.SHARED);\n\t\tconfig.allowedKeyManagement.set(KeyMgmt.NONE);\n\t\tconfig.wepTxKeyIndex = 0;\n\t}\n\t// wpa\n\telse if (\"WPA\".equals(passwordType)) {\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.RSN);\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.WPA);\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.WPA_PSK);\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.CCMP);\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.TKIP);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP40);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP104);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.CCMP);\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.TKIP);\n\t\tconfig.preSharedKey = \"\\\"\".concat(password).concat(\"\\\"\");\n\t}\n\n\treturn config;\n}\n\n\n/**\n * 判断当前wifi的加密类型\n */\nfunction getSecurityType(result : ScanResult) : string {\n\tif (result.capabilities.contains(\"WEP\")) {\n\t\treturn \"WEP\";\n\t} else if (result.capabilities.contains(\"PSK\")) {\n\t\treturn \"WPA\";\n\t} else if (result.capabilities.contains(\"EAP\")) {\n\t\treturn \"EAP\";\n\t}\n\treturn \"NONE\";\n}\n\n\nfunction zeroCountNum(source ?: string) : number {\n\tif (source == null) {\n\t\treturn 0\n\t}\n\tvar splitted = source.split(\":\")\n\tvar countNum = 0;\n\tfor (perItem in splitted) {\n\t\tif (perItem == \"00\") {\n\t\t\tcountNum += 1\n\t\t}\n\t}\n\treturn countNum\n}\n\n\n/**\n\t* 自定义wifi变化广播监听器\n\t*/\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\nclass CustomBroadcastReceiver extends BroadcastReceiver {\n\n\tmWifiManager : WifiManager | null = null;\n\n\tconstructor(wifiManager : WifiManager) {\n\t\tsuper();\n\t\tthis.mWifiManager = wifiManager;\n\t}\n\n\toverride onReceive(_context : Context, intent : Intent) : void {\n\n\n\t\tif (intent.action == WifiManager.WIFI_STATE_CHANGED_ACTION) {\n\n\t\t\tlet state =\n\t\t\t\tintent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN)\n\n\t\t\tif (state == WifiManager.WIFI_STATE_ENABLED) {\n\t\t\t\t// 获取当前的connectInfo 并且进行数据封装\n\t\t\t\tlet uniWifiInfo = new UniWifiInfo(\"\",\"\",false,0,0)\n\t\t\t\t//做一些异步操作\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t// BroadcastReceiver 中不能执行耗时任务，需要使用setTimeout\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tlet winfo = this.mWifiManager!.getConnectionInfo();\n\n          if(winfo != null && winfo.bssid != null && zeroCountNum(winfo.bssid) < 3){\n              //  当前设备链接到了某个具体的wifi.封装成数据对象\n              uniWifiInfo = wrapUniWifiInfoFromConnectInfo(winfo)\n              let res = new UniWifiResult(0,UniErrorSubject,'onWifiConnected:ok',uniWifiInfo)\n\n              // wifi状态可用了，分发当前的链接状态给已注册的监听集合\n              for (let perCallback in Global.onWifiConnectCallbackList) {\n                perCallback(res);\n              }\n              // 封装仅SSID 数据对象\n              let connectedWithPartialInfo = new UniWifiInfoWithPartialInfo(uniWifiInfo.SSID)\n\n              for (let perCallback in Global.onWifiConnectWithPartialInfoCallbackList) {\n                perCallback(connectedWithPartialInfo);\n              }\n          } else {\n            // 开启了wifi 开关，但是尚未链接到某个具体的wifi\n          }\n\n\t\t\t\t}, 100);\n\t\t\t}\n\n\t\t}\n\n\n\t\tif (intent.action == WifiManager.SCAN_RESULTS_AVAILABLE_ACTION) {\n\t\t\tstartWifiScaning = false;\n\t\t\t// wifi 扫描结果回调\n\t\t\tlet results = this.mWifiManager!.scanResults;\n\n\t\t\tif (results != null) {\n\t\t\t\tGlobal.scanList = []\n\t\t\t\tfor (let scanResult in results) {\n\t\t\t\t\tif (scanResult.SSID == null) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tGlobal.scanList.push(wrapUniWifiInfoFromScan(scanResult));\n\t\t\t\t}\n\n\t\t\t\t// 挨个通知，所有的监听器\n\t\t\t\tif(Global.onGetWifiListCallback != null){\n\t\t\t\t\tconst data = new UTSJSONObject();\n\t\t\t\t\tdata[\"wifiList\"] = Global.scanList\n\t\t\t\t\tGlobal.onGetWifiListCallback?.(data);\n\t\t\t\t\t/**\n\t\t\t\t\t * 确保onGetWifiList 只会被执行一次\n\t\t\t\t\t */\n\t\t\t\t\tGlobal.onGetWifiListCallback = null\n\t\t\t\t}\n\n\t\t\t}\n\n      let ret = new UniWifiResult(0,UniErrorSubject,\"getWifiList:ok\",null)\n\t\t\tif(Global.supendGetWifiSuccess != null){\n\t\t\t\tGlobal.supendGetWifiSuccess?.(ret)\n\t\t\t\tGlobal.supendGetWifiSuccess = null\n\t\t\t}\n\t\t\tif(Global.supendGetWifiComplete != null){\n\t\t\t\tGlobal.supendGetWifiComplete?.(ret)\n\t\t\t\tGlobal.supendGetWifiComplete = null\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\n\n/************************* 下面是对外提供的函数 *************************/\n/**\n * start wifi是否正在扫描\n */\nvar startWifiScaning = false\n\n/**\n * 开启wifi\n */\n@Suppress(\"DEPRECATION\")\nexport function startWifiImpl(option : WifiOption) {\n\n\n  // 具备了权限，继续前进\n  let wifiManager : WifiManager =\n  \tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\n  // 用户没有开启wifi 总开关\n  if (!wifiManager.isWifiEnabled()) {\n  \t// wifi 没开启\n    let failResult = new WifiFailImpl(getErrcode(12005));\n  \toption.fail?.(failResult);\n  \toption.complete?.(failResult);\n  \treturn;\n  }\n  // 初始化wifi 状态广播监听，后续所有的api，均基于此\n  if(Global.mReceiver != null){\n  \t// 说明已经注册过了\n    let result = UniWifiResult(0,UniErrorSubject,\"startWifi:ok\",null)\n\n  \toption.success?.(result)\n  \toption.complete?.(result)\n  \treturn\n  }\n\n\n  Global.mReceiver = new CustomBroadcastReceiver(wifiManager)\n\n  let filter = new IntentFilter()\n  filter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)\n  // @ts-ignore\n  filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION)\n  // @ts-ignore\n  filter.addAction(WifiManager.SUPPLICANT_STATE_CHANGED_ACTION);\n\n  UTSAndroid.getUniActivity()!.registerReceiver(Global.mReceiver, filter)\n\n  /**\n  \t* activity 被销毁时，取消注册\n  \t*/\n  UTSAndroid.onAppActivityDestroy(function () {\n\n  \tif (Global.mReceiver != null) {\n  \t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\n  \t\tGlobal.mReceiver = null\n\n  \t\tGlobal.scanList = []\n  \t\tGlobal.onGetWifiListCallback = null\n  \t\tGlobal.onWifiConnectCallbackList = []\n  \t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\n  \t}\n\n  });\n  startWifiScaning = true\n  // 开始扫描\n  wifiManager.startScan()\n\n  let result = UniWifiResult(0,UniErrorSubject,\"startWifi:ok\",null)\n  option.success?.(result)\n  option.complete?.(result)\n\n}\n\n@Suppress(\"DEPRECATION\")\nexport function startWifi(option : WifiOption) {\n\n  /**\n   * 准备权限\n   */\n  let permissionNeed = [\"android.permission.ACCESS_FINE_LOCATION\"];\n  UTSAndroid.requestSystemPermission(UTSAndroid.getUniActivity()!, permissionNeed, function (allRight:boolean,_grantedList:string[]) {\n  \tif (allRight) {\n  \t\t// 交给目前的location 引擎，真实执行\n  \t\tstartWifiImpl(option)\n  \t}\n  }, function (_doNotAskAgain:boolean,_grantedList:string[]) {\n  \tlet err = new WifiFailImpl(getErrcode(12001));\n  \toption.fail?.(err)\n  \toption.complete?.(err)\n  })\n\n}\n\n/**\n\t* 获取wifi列表\n\t*/\n@Suppress(\"DEPRECATION\")\nexport function getWifiList(option : WifiOption) {\n\n\n\tif (Global.mReceiver == null) {\n\t\t// 还没调用startWifi 提示报错\n    let err = new WifiFailImpl(getErrcode(12000));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\n\t\treturn\n\t}\n\n\tlet wifiManager : WifiManager =\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\n\n  if(option.success != null){\n    Global.supendGetWifiSuccess = option.success\n  }\n\tif(option.complete != null){\n    Global.supendGetWifiComplete = option.complete\n  }\n\n\twifiManager.startScan()\n\n}\n\n\n\n/**\n\t* wifi 链接成功的回调注册\n\t*/\nexport function onWifiConnected(callback : UniWifiResultCallback) {\n\tGlobal.onWifiConnectCallbackList.push(callback)\n}\n\n\nexport function onWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo) {\n\tGlobal.onWifiConnectWithPartialInfoCallbackList.push(callback)\n}\n\n\n/**\n * wifi 链接成功的回调取消注册\n */\nexport function offWifiConnected(callback? : UniWifiResultCallback) {\n\n\tif(callback == null){\n\t\tGlobal.onWifiConnectCallbackList = []\n\t\treturn\n\t}\n\n\tlet callbackIndex = Global.onWifiConnectCallbackList.indexOf(callback)\n\tif (callbackIndex >= 0) {\n\t\tGlobal.onWifiConnectCallbackList.splice(callbackIndex, 1);\n\t}\n}\n\n/**\n * 不具备详细信息的wifi 反注册\n */\nexport function offWifiConnectedWithPartialInfo(callback? : UniWifiResultCallbackWithPartialInfo) {\n\n\tif(callback == null){\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\n\t\treturn\n\t}\n\n\tlet callbackIndex = Global.onWifiConnectWithPartialInfoCallbackList.indexOf(callback)\n\tif (callbackIndex >= 0) {\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList.splice(callbackIndex, 1);\n\t}\n}\n\n/**\n\t* 注册Wifi列表的监听事件\n\t*/\nexport function onGetWifiList(callback : UniGetWifiListCallback) {\n\tGlobal.onGetWifiListCallback = callback\n}\n\n/**\n * 取消注册Wifi列表的监听事件\n */\nexport function offGetWifiList(callback? : UniWifiCallback) {\n\tGlobal.onGetWifiListCallback = null\n\tGlobal.supendGetWifiComplete = null\n\tGlobal.supendGetWifiSuccess = null\n}\n\n\n/**\n * 真正执行wifi链接逻辑\n */\nfunction realWifiConnect(option : WifiConnectOption){\n\n\tif (Global.mReceiver == null || Global.scanList.length < 1) {\n\n    let err = new WifiFailImpl(getErrcode(12000));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\n\t\treturn\n\t}\n\n\t// 执行后续的逻辑\n\tlet scanWifiInfo : AndroidUniWifiInfo | null = null\n\tfor (let scanResult in Global.scanList) {\n\t\tif (scanResult.SSID.equals(option.SSID)) {\n\t\t\tscanWifiInfo = scanResult\n\t\t}\n\t}\n\n\tif (scanWifiInfo == null) {\n\t\t// 不在扫描列表中返回错误\n    let err = new WifiFailImpl(getErrcode(12000));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\t\treturn\n\t}\n\n\tlet wifiConfigration = wrapWifiConfiguration(scanWifiInfo.SSID, option.password, scanWifiInfo.securityType);\n\twifiConfigration.BSSID = scanWifiInfo.BSSID\n\tlet wifiManager : WifiManager =\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\n\n\t// 如果已经存在了指定wifi 配置，移除之\n\tlet targetExistConfig : WifiConfiguration | null = null\n\tlet existingConfigs = wifiManager.getConfiguredNetworks();\n\tfor (let existingConfig in existingConfigs) {\n\t\tif (existingConfig.SSID.equals(\"\\\"\" + option.SSID + \"\\\"\")) {\n\t\t\ttargetExistConfig = existingConfig\n\t\t}\n\t}\n\t// 如果wifi已经保存了当前ssid的配置，可能是别的应用添加的。android系统要求，需要删除掉重新添加\n\tif (targetExistConfig != null) {\n\t\tlet removeRet = wifiManager.removeNetwork(targetExistConfig.networkId);\n\n\t\tif (!removeRet) {\n\n\t\t\t// add since 2023-03-28，如果当前系统大于等于android10， 则明确当前系统不支持\n\t\t\tif(Build.VERSION.SDK_INT > 28){\n\t\t\t\t// 系统大于android 9\n        let err = new WifiFailImpl(getErrcode(12001));\n\t\t\t\toption.fail?.(err)\n\t\t\t\toption.complete?.(err)\n\t\t\t}else{\n\t\t\t\t// 移除之前的配置失败了，返回错误，需要用户手动取消保存一下\n        let err = new WifiFailImpl(getErrcode(12013));\n\t\t\t\toption.fail?.(err)\n\t\t\t\toption.complete?.(err)\n\t\t\t}\n\n\n\t\t\treturn\n\t\t}\n\n\t}\n\n\tlet currentConnect = wifiManager.getConnectionInfo()\n\tif (currentConnect.networkId >= 0) {\n\t\twifiManager.disableNetwork(currentConnect.networkId)\n\t} else {\n\t\twifiManager.removeNetwork(currentConnect.networkId)\n\t}\n\twifiManager.disconnect()\n\n\tlet connected = false;\n\ttry {\n\n\t\tlet netID = wifiManager.addNetwork(wifiConfigration);\n\t\t// 如果-1 说明没添加上，报错即可\n\t\tif (netID < 0) {\n      let err = new WifiFailImpl(getErrcode(12002));\n\t\t\toption.fail?.(err)\n\t\t\toption.complete?.(err)\n\n\t\t\treturn\n\t\t}\n\n\n\t\tlet enabled = wifiManager.enableNetwork(netID, true);\n\t\tif (!enabled) {\n      let err = new WifiFailImpl(getErrcode(12007));\n\t\t\toption.fail?.(err)\n\t\t\toption.complete?.(err)\n\n\t\t\treturn\n\t\t}\n\t\tconnected = wifiManager.reconnect();\n\n\t} catch (e) {\n\t\tconnected = false;\n\t\tconsole.log(e);\n\t}\n\n\tif (!connected) {\n\t\t// 出错了，返回错误\n\t\t// 兜底的报错\n    let err = new WifiFailImpl(getErrcode(12010));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\t\treturn\n\t}\n\n  let result = new UniWifiResult(0,UniErrorSubject,\"getWifiList:ok\",null)\n\n\twifiManager.saveConfiguration()\n\t//scanWifiInfo 根据 partialInfo 填充给返回字段\n\tif (option.partialInfo != null && option.partialInfo == true) {\n\t\tlet wifiPartialInfo : UniWifiInfo = {\n\t\t\tSSID: scanWifiInfo.SSID\n\t\t}\n\t\tresult.wifi = wifiPartialInfo\n\t} else {\n\t\tresult.wifi = wrapUniWifiInfoFromAndroid(scanWifiInfo)\n\t}\n\n\n\toption.success?.(result)\n\toption.complete?.(result)\n}\n\n/**\n * 链接指定wifi\n */\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\nexport function connectWifi(option : WifiConnectOption) {\n\n\tif (option.maunal == true) {\n\t\t// 指定了手动模式\n\t\tlet manunalIntent = new Intent(android.provider.Settings.ACTION_WIFI_SETTINGS);\n\t\tUTSAndroid.getUniActivity()!.startActivity(manunalIntent);\n\n    \n     let result = new UniWifiResult(0,UniErrorSubject,\"connectWifi:ok\",null)\n\n\t\toption.success?.(result)\n\t\toption.complete?.(result)\n\t\treturn\n\t}\n\n\n\n\t// add since 2022-03-28 ，增加逻辑，如果正在扫描中，则可以等待5s\n\tif(startWifiScaning){\n\t\tlet taskCount = 0\n\t\tlet taskId:number  = 0\n\t\ttaskId = setInterval(function(){\n\n\t\t\ttaskCount += 1;\n\t\t\tif(taskCount >= 5 || startWifiScaning == false){\n\t\t\t\t// 超过10s了。或者扫描过程结束了\n\t\t\t\tclearInterval(taskId)\n\t\t\t\trealWifiConnect(option)\n\t\t\t}\n\t\t},2000)\n\n\t\tUTSAndroid.onAppActivityDestroy(function () {\n\t\t\tclearInterval(taskId)\n\t\t});\n\t}else{\n\t\trealWifiConnect(option)\n\t}\n\n\n\n}\n\n\n/**\n\t* 关闭wifi\n\t*/\nexport function stopWifi(option : WifiOption) {\n\t// 需要先开启wifi,才能使用后续的功能\n\tif (Global.mReceiver == null) {\n    let err = new WifiFailImpl(getErrcode(12000));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\n\t\treturn\n\t}\n\ttry {\n\t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\n\t} catch (e) {\n\t\t// 多次调用\n\t\t//TODO handle the exception\n\t}\n\n\tGlobal.onGetWifiListCallback = null\n\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\n\tGlobal.onWifiConnectCallbackList = []\n\tGlobal.mReceiver = null\n\n  let ret = new UniWifiResult(0,UniErrorSubject,\"stopWifi:ok\",null)\n\toption.success?.(ret)\n\toption.complete?.(ret)\n\n}\n\n/**\n * 获取当前连接中的wifi信息\n */\n@Suppress(\"DEPRECATION\")\nexport function getConnectedWifi(option : GetConnectedWifiOptions) {\n\n\tlet wifiInfo : UniWifiInfo = {\n\t\tSSID: \"\"\n\t}\n\n\n\tif (Global.mReceiver == null) {\n\t\t// 还没调用startWifi 提示报错\n    let err = new WifiFailImpl(getErrcode(12000));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\n\t\treturn\n\t}\n\n\t// 需要先校验权限，没有位置权限无法获取wifi\n\tif (ActivityCompat.checkSelfPermission(UTSAndroid.getUniActivity()!, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n\t\t// 尚不具备权限，返回错误\n    let err = new WifiFailImpl(getErrcode(12001));\n\t\toption.fail?.(err)\n\t\toption.complete?.(err)\n\t\treturn;\n\t}\n\n\n\n\tconst context = UTSAndroid.getAppContext();\n\tif (context != null) {\n\t\tconst wm = context.getSystemService(\n\t\t\tContext.WIFI_SERVICE\n\t\t) as WifiManager;\n\t\t// 测试android 12上可以使用\n\t\t//@ts-ignore\n\t\tconst winfo = wm.getConnectionInfo();\n\n\t\twifiInfo = wrapUniWifiInfoFromConnectInfo(winfo);\n\n    let res = new UniWifiResult(0,UniErrorSubject,\"getConnectedWifi:ok\",null)\n\n\t\t// 判断一下是否wifi 关闭了\n\t\tif (option.partialInfo!= null) {\n\t\t\tlet ret : UniWifiInfo = {\n\t\t\t\tSSID: wifiInfo.SSID\n\t\t\t}\n\t\t\tres.wifi = ret;\n\t\t} else {\n\t\t\tif (wifiInfo.BSSID == null || zeroCountNum(wifiInfo.BSSID) > 3) {\n         let err = new WifiFailImpl(getErrcode(12005));\n\t\t\t\toption.fail?.(err)\n\t\t\t\toption.complete?.(err)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tres.wifi = wifiInfo;\n\t\t}\n\n\n\t\toption.success?.(res)\n\t\toption.complete?.(res)\n\t\treturn\n\t}\n\n  let err = new WifiFailImpl(getErrcode(12000));\n\toption.fail?.(err)\n\toption.complete?.(err)\n}\n\n","/**\n * Wifi 函数通用入参封装\n */\nexport type WifiOption = {\n\tsuccess ?: (res : UniWifiResult) => void;\n\tfail ?: (res : UniError) => void;\n\tcomplete ?: (res : any) => void;\n};\n\n/**\n * Wifi 链接参数封装\n */\nexport type WifiConnectOption = {\n\tSSID ?: string;\n\tBSSID ?: string;\n\tpassword ?: string;\n\tmaunal ?: boolean;\n\tpartialInfo ?: boolean; //ios不生效\n\tsuccess ?: (res : UniWifiResult) => void;\n\tfail ?: (res : UniError) => void;\n\tcomplete ?: (res : any) => void;\n}\n\n/**\n * 获取当前链接的wifi信息\n */\nexport type GetConnectedWifiOptions = {\n\tpartialInfo ?: boolean\n\tsuccess ?: (res : UniWifiResult) => void\n\tfail ?: (res : UniError) => void\n\tcomplete ?: (res : any) => void\n}\n\n/*\n * 对外暴露的wifi信息\n */\nexport type UniWifiInfo = {\n\tSSID : string;\n\tBSSID ?: string;\n\tsecure ?: boolean;\n\tsignalStrength ?: number;\n\tfrequency ?: number;\n}\n\nexport type UniWifiInfoWithPartialInfo = {\n\tSSID : string;\n}\n\n\nexport type UniWifiResult = {\n\terrCode : number,\n\terrSubject : string,\n\terrMsg : string,\n\twifi : UniWifiInfo | null\n}\n\nexport type UniWifiCallback = () => void\n\nexport type UniGetWifiListCallback = (wifiInfo:UTSJSONObject) => void\n\nexport type UniWifiResultCallback = (wifiInfo:UniWifiResult) => void\n\nexport type UniWifiResultCallbackWithPartialInfo = (wifiInfo:UniWifiInfoWithPartialInfo) => void\n\n\nexport type StartWifi = (option : WifiOption) => void\n\nexport type StopWifi = (option : WifiOption) => void\n\nexport type GetWifiList = (option : WifiOption) => void\n\nexport type OnGetWifiList = (callback : UniGetWifiListCallback) => void\n\nexport type OffGetWifiList = (callback : UniWifiCallback) => void\n\nexport type GetConnectedWifi = (option : GetConnectedWifiOptions) => void\n\nexport type ConnectWifi = (option : WifiConnectOption) => void\n\nexport type OnWifiConnected = (callback : UniWifiResultCallback) => void\n\nexport type OnWifiConnectedWithPartialInfo = (callback : UniWifiResultCallbackWithPartialInfo) => void\n\nexport type OffWifiConnected = (callback : UniWifiCallback | null) => void\n\nexport type OffWifiConnectedWithPartialInfo = (callback : UniWifiResultCallbackWithPartialInfo | null) => void\n\nexport type SetWifiList = (option : WifiOption) => void\n\n\n/**\n * 错误码\n * - 12000 尚未初始化\n * - 12001 当前系统不支持相关能力\n * - 12002 密码错误\n * - 12005 Android 特有，未打开 Wi-Fi 开关\n * - 12007 用户拒绝授权链接 Wi-Fi\n * - 12010 系统其他错误\n * - 12013 系统保存的 Wi-Fi 配置过期，建议忘记 Wi-Fi 后重试，仅 Android 支持\n */\nexport type WifiErrorCode = 12000 |12001 | 12002 |  12005 | 12007 | 12010 | 12013;\n\nexport interface WifiFail extends IUniError{\n\terrCode: WifiErrorCode\n};\n\n\n\ninterface Uni {\n\t/**\n\t * 初始化Wi-Fi模块\n\t *\n\t * @param {WifiOption} option\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#startwifi\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { after: 'stopWifi' }\n\t */\n\tstartWifi(option : WifiOption): void,\n\t/**\n\t * 关闭 Wi-Fi 模块\n\t *\n\t * @param {WifiOption} option\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#stopwifi\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { before: 'startWifi' }\n\t */\n\tstopWifi(option : WifiOption) : void,\n\t/**\n\t * @param {WifiConnectOption} option\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#connectWifi\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \">=4.4 && <10.0\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest {\n\t\tgenerated: false,\n\t\tpollution: false,\n\t\tcases:[\n\t\t\t{\n\t\t\t\tbefore: 'startWifi',\n\t\t\t\tafter: 'stopWifi',\n\t\t\t\tinput: [{\n\t\t\t\t\tmaunal:false,\n\t\t\t\t\tSSID:\"Xiaomi_20D0\",\n\t\t\t\t\tpassword:\"streamApp!2016\",\n\t\t\t\t}],\n\t\t\t\toutput:{\n\t\t\t\t\t\tcallbackType: 'success',\n\t\t\t\t\t\tvalue: { errCode: 12013 ,errMsg: \"connectWifi:wifi config may be expired\",errSubject: \"uni-connectWifi\"}\n\t\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\t*/\n\tconnectWifi(option : WifiConnectOption) : void,\n\t/**\n\t * 请求获取 Wi-Fi 列表。wifiList 数据会在 onGetWifiList 注册的回调中返回。\n\t * @param {WifiOption} option\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#getWifiList\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { before: 'startWifi', after: 'stopWifi' }\n\t*/\n\tgetWifiList(option : WifiOption) : void,\n\t/**\n\t * 监听获取到 Wi-Fi 列表数据事件。\n\t *\n\t * @param {UniWifiCallback} callback\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#onGetWifiList\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest  { expectCallback: true }\n\t * @autotest {\n\t\t generated: false,\n\t\t pollution: false,\n\t\t expectCallback: true,\n\t\t before: 'startWifi',\n\t\t after: 'onGetWifiListAfter',\n\t\t cases: [\n\t\t\t {\n\t\t\t\t output: {\n\t\t\t\t\t value: 0,\n\t\t\t\t\t returnKey: '.wifiList.length',\n\t\t\t\t\t jestExpectSyntax: 'toBeGreaterThan'\n\t\t\t\t },\n\t\t\t }\n\t\t ]\n\t}\n\t */\n\tonGetWifiList(callback : UniGetWifiListCallback) : void,\n\t/**\n\t * 移除获取到 Wi-Fi 列表数据事件的监听函数。\n\t *\n\t * @param {UniWifiCallback} callback\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#offGetWifiList\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { expectCallback: true }\n\t */\n\toffGetWifiList(callback : UniWifiCallback) : void,\n\t/**\n\t * 获取已连接的 Wi-Fi 信息\n\t *\n\t * @param {GetConnectedWifiOptions} option\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#getConnectedWifi\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { before: 'startWifi', after: 'stopWifi' }\n\t */\n\tgetConnectedWifi(option : GetConnectedWifiOptions) : void,\n\t/**\n\t * 监听连接上 Wi-Fi 的事件\n\t *\n\t * @param {UniWifiCallback} callback\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#onWifiConnected\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { expectCallback: true }\n\t */\n\tonWifiConnected(callback : UniWifiResultCallback) : void,\n\t/**\n\t * 监听连接上 Wi-Fi 的事件。\n\t *\n\t * @param {UniWifiCallback} callback\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#onWifiConnectedWithPartialInfo\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { expectCallback: true }\n\t */\n\tonWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo) : void,\n\t/**\n\t * 移除连接上 Wi-Fi 的事件的监听函数。\n\t *\n\t * @param {UniWifiCallback} callback\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#offWifiConnected\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"4.4.4\",\n\t *            \"uniVer\": \"3.7.0\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"9.0\",\n\t *            \"uniVer\": \"3.7.7\",\n\t *            \"unixVer\": \"3.9.0\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { expectCallback: true }\n\t */\n\toffWifiConnected(callback : UniWifiCallback | null) : void,\n\t/**\n\t * 移除连接上 Wi-Fi 的事件的监听函数。\n\t *\n\t * @param {UniWifiCallback} callback\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#offWifiConnectedWithPartialInfo\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"x\",\n\t *            \"uniVer\": \"x\",\n\t *            \"unixVer\": \"x\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"x\",\n\t *            \"uniVer\": \"x\",\n\t *            \"unixVer\": \"x\"\n\t *   \t  }\n\t *    }\n\t * }\n\t * @uniVersion 3.7.7\n\t * @uniVueVersion 2,3  //支持的vue版本\n\t * @autotest { expectCallback: true }\n\t */\n\toffWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo | null) : void,\n\t/**\n\t * SetWifiList  暂未实现\n\t *\n\t * @uniPlatform {\n\t *    \"app\": {\n\t *        \"android\": {\n\t *            \"osVer\": \"x\",\n\t *            \"uniVer\": \"x\",\n\t *            \"unixVer\": \"x\"\n\t *        },\n\t *        \"ios\": {\n\t *            \"osVer\": \"x\",\n\t *            \"uniVer\": \"x\",\n\t *            \"unixVer\": \"x\"\n\t *   \t  }\n\t *    }\n\t * }\n\t */\n\tsetWifiList(option : WifiOption) : void,\n}\n","import { WifiErrorCode, WifiFail} from \"./interface.uts\"\n\n/**\n * 错误主题\n */\nexport const UniErrorSubject = 'uni-wifi';\n/**\n * 错误码\n * @UniError\n */\nexport const WifiUniErrors : Map<WifiErrorCode, string> = new Map([\n\n\t/**\n\t * 未先调用 startWifi 接口\n\t */\n\t[12000, 'not init.'],\n\t/**\n\t * 当前系统不支持相关能力\n\t */\n\t[12001, 'system not support'],\n  /**\n   * 密码错误\n   */\n  [12002, 'password error Wi-Fi'],\n\t/**\n\t * Android 特有，未打开 Wi-Fi 开关\n\t */\n\t[12005, 'wifi not turned on'],\n\t/**\n\t * 用户拒绝授权链接 Wi-Fi\n\t */\n\t[12007, 'user denied'],\n\t/**\n\t * 系统其他错误，需要在 errmsg 打印具体的错误原因\n\t */\n\t[12010, 'unknown error'],\n  /**\n   * 系统保存的 Wi-Fi 配置过期，建议忘记 Wi-Fi 后重试，仅 Android 支持\n   */\n  [12013, 'wifi config may be expired'],\n\n]);\n\n\nexport function getErrcode(errCode : number) : WifiErrorCode {\n\tconst res = WifiUniErrors[errCode];\n\treturn res == null ? 12000 : errCode;\n}\n\n\nexport class WifiFailImpl extends UniError implements WifiFail {\n\tconstructor(errCode : WifiErrorCode) {\n\t\tsuper();\n\t\tthis.errSubject = UniErrorSubject;\n\t\tthis.errCode = errCode;\n\t\tthis.errMsg = WifiUniErrors[errCode] ?? \"\";\n\t}\n}\n\n"],"names":[],"mappings":"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"}